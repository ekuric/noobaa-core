#!groovyâ€‹
def branch = 'yulia-jenkins-pipeline'
//dataset
def dataset_ip = '51.143.9.62'
def noobaa_server = 'datasetpipeline.westus2.cloudapp.azure.com'
def dataset_size = '51200' //MB
def aging_time = '300' //min
//machinekiller
def start_killing_time = '30' // start killing after 30 minutes
def service = 'azure'
def resource = 'pipeline-dataset'
def zone = 'westus2'
def prefix = 'qa-dataset-agent'
def min_machines = '0' // minimum 3 machine
def max_machines = '3' // maximum 10 machines
//cluster
def clusterResource = 'pipelie-cluster'
def clusterVnet = 'pipelie-cluster-vnet'
def clusterStorage = 'pipelieclusterdisks'
//agentMatrix
def azureName = 'agentMatrix0'
def serverName = 'agentmatrix.westus2.cloudapp.azure.com'
def serverIP = '52.183.97.185'
def agentsResource = 'pipeline-agents'
def agentsVnet = 'pipeline-agents-vnet'
def agentsStorage = 'pipelineagentsdisks'
//systemConfig
def nodeLocalIP = '10.0.0.21'
def serverLocalIP = '52.250.109.40'
def severExternalIP = '52.250.109.40'
//yulia rg
def yulia_ip = '51.143.17.34'
def yulia_resource = 'yulia-test-rg'
def yulia_vnet = 'yulia-test-rg-vnet'
def yulia_storage = 'yuliastorage'
def ip = '51.143.13.209'

node('pipeline') {
	def buildResult = "SUCCESS"
	try {
		stage('Get code from GIT') {
			echo 'node name: pipeline, ip: 52.183.114.248'
			echo 'Checkouting from git!'
			checkout([$class: 'GitSCM', branches: [[name: "*/${branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '22686b32-d2c1-4a6f-9248-d89614dd8a3f', url: 'git@github.com:noobaa/noobaa-core.git']]])
		}
		stage('Preparing environment') {
		    sh script: """
                yes | cp /usr/local/noobaa/.env $WORKSPACE/
            """
			echo 'Installing all needed npm packages!'
			sh script: """
			export NVM_DIR=/opt/nvm
			. /opt/nvm/nvm.sh
			 #nvm install 6.11.5
			 #nvm alias default 6
			 #nvm use default
			 #cd $WORKSPACE
			 #npm install
			 #npm install azure cloud-cd
			 #npm install minimist
			 nvm --version
			 node -v
			 npm -v
			 """
			 echo 'Deleting log file'
			 sh script: """
			 rm -rf $WORKSPACE/logs/noobaa.log
			 """
            //    echo 'Getting last successful package build'
            //    sh script: """
            //    curl -u jackyalbo:711d9303458d34ad56c1a48716c02ee5e286570f -L $JENKINS_URL/Build/job/Build-Package/lastSuccessfulBuild/api/xml >/tmp/lastSuccessfulBuild.xml
            //    isMaster=\$(cat /tmp/lastSuccessfulBuild.xml | awk -F "<displayName>" '{print \$2}' | awk -F "</displayName>" '{print \$1}')
             //        if [[ "\${isMaster}" =~ "master" ]]
             //        then
             //        curl -u jackyalbo:711d9303458d34ad56c1a48716c02ee5e286570f -L $JENKINS_URL/Build/job/Build-Package/lastSuccessfulBuild/artifact/*zip*/archive.zip >/tmp/noobaa-NVA-latest.zip
             //    """
		}
		stage('Account test') {
            echo 'Doing account tests!'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            node $WORKSPACE/src/test/qa/account_test.js --server_ip '${ip}' --system_ip '${dataset_ip}'
            """
		}
		stage('Namespace test') {
            echo 'Loading data to namespace resources!'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            node $WORKSPACE/src/test/qa/namespace_test.js --server_ip '${dataset_ip}'
            """
        },
        stage('TUI test') {
            echo 'Doing some TUI!'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            node $WORKSPACE/src/test/qa/test-TUI.js --server_ip '${dataset_ip}'
            """
        }
        stage('Data availability test') {
            echo 'Setting yulias env file'
            sh script: """
            rm .env
            touch .env
            echo 'AZURE_SUBSCRIPTION_ID=a3556050-2d88-42a4-a4e3-f0a2087edc60' >> .env
            echo 'DOMAIN=noobaa.com' >> .env
            echo 'APPLICATION_SECRET=JRqvAUh95fF+3aBaz0SJcB21ocTO8+MCtjJ7adg9fhE=' >> .env
            echo 'AZURE_STORAGE_CONNECTION_STRING="DefaultEndpointsProtocol=https;AccountName=yuliastorage;AccountKey=viMsHoxn3psNN/bHwerSsSJllPUGRO4/YcfJ7bNYqv3KwLtbE1t1VpWcghJ8A7J74qlBF5bzcyH2L4Kx1S8nAw==;EndpointSuffix=core.windows.net"' >> .env
            echo 'CLIENT_ID=199522b3-407d-45eb-b7fb-023d21ab6406' >> .env
            """
            echo 'Uploading data with switching off agents and checking files'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            node $WORKSPACE/src/test/qa/data_availability_test.js --resource '${yulia_resource}' --vnet '${yulia-test-rg-vnet}' --storage '${yulia_storage}' --server_ip '${yulia_ip}'
            """
        }
        stage('Rebuild replicas test') {
            echo 'Uploading data with switching off agents and checking files chunks and parts'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            node $WORKSPACE/src/test/qa/rebuild_replicas_test.js --resource '${yulia_resource}' --vnet '${yulia-test-rg-vnet}' --storage '${yulia_storage}' --server_ip '${yulia_ip}'
            """
        }
        stage('Agent matrix') {
        echo 'Setting agents env file'
            sh script: """
            rm .env
            touch .env
            echo 'AZURE_SUBSCRIPTION_ID=a3556050-2d88-42a4-a4e3-f0a2087edc60' >> .env
            echo 'DOMAIN=noobaa.com' >> .env
            echo 'APPLICATION_SECRET=JRqvAUh95fF+3aBaz0SJcB21ocTO8+MCtjJ7adg9fhE=' >> .env
            echo 'AZURE_STORAGE_CONNECTION_STRING="DefaultEndpointsProtocol=https;AccountName=pipelineagentsdisks;AccountKey=p9Ed8m+87P5ZwcOcvXqfvCJ9NExeZBRutsDdSCkXU2JKj9wPIV60e1yYaZ4UIKuSLvedMhVS2dSKUtDYSbujKQ==;EndpointSuffix=core.windows.net"' >> .env
            echo 'CLIENT_ID=199522b3-407d-45eb-b7fb-023d21ab6406' >> .env
            """
            echo 'Adding some agents!'
            sh script: """
            export NVM_DIR=/opt/nvm
            . /opt/nvm/nvm.sh
            #fname=\$(unzip -o /tmp/noobaa-NVA-latest.zip -d  /tmp/|grep "tar.gz"|awk '{ print \$2 }')
            node $WORKSPACE/src/test/qa/agents_matrix.js --azure_name '${azureName}' --server_ip '${serverIP}' --resource '${agentsResource}' --vnet '${agentsVnet}' --storage '${agentsStorage}'
            """
        }
	} catch (e) {
		buildResult = "FAILED"
        echo 'build failed with error ' + e
        throw e
	} finally {
			def subject = "Job '${JOB_NAME}' (${BUILD_NUMBER}) version is " + buildResult
			def appLog = readFile("${WORKSPACE}/logs/noobaa.log")
			def details = "Please go to ${BUILD_URL} and verify the build. noobaa logs: " + appLog
			mail subject: subject,
			body: details,
			to:  'yuliia.kovalenko@noobaa.com, liran.mauda@noobaa.com, nimrod.becker@noobaa.com'
	}
}
