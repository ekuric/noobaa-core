apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: noobaa
spec:
  serviceName: noobaa-services
  replicas: 1
  selector:
    app: noobaa
  template:
    metadata:
      labels:
        app: noobaa
    spec:
      imagePullSecrets:
        - name: noobaa-regcred
      containers:
        - name: noobaa
          securityContext:
            capabilities: {}
            privileged: true
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "8Gi"
              cpu: "4"
          # change image location before running
          # image: [image registry]/[image]
          image: nbimage:1
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 8080
            - containerPort: 8443
            - containerPort: 8444
            - containerPort: 60100
            - containerPort: 60101
            - containerPort: 60102
            - containerPort: 60103
            - containerPort: 60104
            - containerPort: 60105
          volumeMounts:
            - mountPath: /sys/fs/cgroup
              name: cgroup-volume
              readOnly: true
            - mountPath: /run
              name: run-volume
            - mountPath: /run/lock
              name: run-lock-volume
            - mountPath: /data
              name: datadir
            - mountPath: /log
              name: logdir
      volumes:
        - name: cgroup-volume
          hostPath:
            # directory location on host
            path: /sys/fs/cgroup
            # this field is optional
            type: Directory
        - name: run-volume
          emptyDir: { medium: "Memory" }
        - name: run-lock-volume
          emptyDir: { medium: "Memory" }
  volumeClaimTemplates:
    # this will provision a dynamic persistent volume (volume is automatically provisioned by a provisioner)
    # in minikube it is provisioned as hostPath volume under hosts /tmp which is not persistent between
    # minkube restarts. if we want it to be persistent between restarts we need to statically provision a
    # volume according to this https://kubernetes.io/docs/setup/minikube/#persistent-volumes
    - metadata:
        name: logdir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
